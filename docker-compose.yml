version: "3.5"
services:
  timemanager:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      spring.r2dbc.url: r2dbc:pool:postgres://postgres_db/${DB_NAME}
    ports:
      - "8083:8083"
    restart: always
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:${SERVER_PORT}/actuator/health || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s

  postgres_db:
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./docker-db/data/db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USERNAME -d $DB_NAME" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  flyway:
    image: flyway/flyway:10
    command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    env_file:
      - .env
    volumes:
      - ./docker-db/flyway/migrations:/flyway/sql
    environment:
      - FLYWAY_USER=${DB_USERNAME}
      - FLYWAY_PASSWORD=${DB_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://postgres_db/${DB_NAME}
    depends_on:
      - postgres_db